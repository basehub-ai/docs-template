import type { Metadata } from 'next'
import { Pump } from '@/.basehub/react-pump'
import { Header } from './_components/header'
import { Footer } from './_components/footer'
import { GeistSans } from 'geist/font/sans'
import { GeistMono } from 'geist/font/mono'
import { draftMode } from 'next/headers'

import './globals.css'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en">
      <body className={`${GeistSans.variable} ${GeistMono.variable} font-sans`}>
        <Pump
          queries={[{ settings: { brandColor: { hex: true } } }]}
          next={{ revalidate: 30 }}
          draft={draftMode().isEnabled}
        >
          {async ([data]) => {
            'use server'

            function hexToRgb(hex: string): {
              r: number
              g: number
              b: number
            } {
              hex = hex.replace(/^#/, '')

              if (hex.length === 3) {
                hex = hex[0]! + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]
              }

              let bigint: number = parseInt(hex, 16)
              let r: number = (bigint >> 16) & 255
              let g: number = (bigint >> 8) & 255
              let b: number = bigint & 255

              return { r, g, b }
            }

            const { r, g, b } = hexToRgb(data.settings.brandColor.hex)

            return (
              <style>{`
                :root {
                  --brand-color: ${data.settings.brandColor.hex};
                  --brand-color-r: ${r};
                  --brand-color-g: ${g};
                  --brand-color-b: ${b};
                }
              `}</style>
            )
          }}
        </Pump>
        <Header />
        {children}
        <Footer />
      </body>
    </html>
  )
}
